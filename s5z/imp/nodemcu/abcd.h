

#define NUMBER_OF_ALPHABET 26
#define ABC2index(c) ((c>='A' && c<='Z')?c-'A':0)
#define abc2index(c) ((c>='a' && c<='z')?c-'a':0)
#define number2index(c) ((c>='0' && c<='9')?c-'0':0)

// Unknown
uint8_t CHAR_UNKNOWN[8] = { 0, 0, 0, 24, 24, 0, 0, 0 };
// ' '
uint8_t CHAR_SPACE[8] = { 0, 0, 0, 0, 0, 0, 0, 0 };

// Velka abeceda A-Z
uint8_t CHARS_ABCD[][8] = {
  { 0, 24, 36, 36, 60, 36, 36, 0 }, // A
  { 0, 56, 36, 56, 36, 36, 56, 0 }, // B
  { 0, 24, 36, 32, 32, 36, 24, 0 }, // C
  { 0, 48, 40, 36, 36, 40, 48, 0 }, // D
  { 0, 60, 32, 32, 56, 32, 60, 0 }, // E
  { 0, 60, 32, 56, 32, 32, 32, 0 }, // F
  { 0, 24, 36, 32, 44, 36, 24, 0 }, // G
  { 0, 36, 36, 36, 60, 36, 36, 0 }, // H
  { 0, 56, 16, 16, 16, 16, 56, 0 }, // I
  { 0, 60, 4, 4, 36, 36, 24, 0 }, // J
  { 0, 36, 40, 48, 40, 36, 36, 0 }, // K
  { 0, 32, 32, 32, 32, 32, 56, 0 }, // L
  { 0, 68, 108, 84, 68, 68, 68, 0 }, // M
  { 0, 100, 100, 84, 84, 76, 76, 0 }, // N
  { 0, 24, 36, 36, 36, 36, 24, 0 }, // O
  { 0, 56, 36, 56, 32, 32, 32, 0 }, // P
  { 0, 24, 36, 36, 36, 44, 28, 0 }, // Q
  { 0, 56, 36, 56, 40, 36, 36, 0 }, // R
  { 0, 24, 36, 48, 12, 36, 24, 0 }, // S
  { 0, 124, 16, 16, 16, 16, 16, 0 }, // T
  { 0, 36, 36, 36, 36, 36, 24, 0 }, // U
  { 0, 36, 36, 40, 40, 48, 32, 0 }, // V
  { 0, 68, 84, 84, 84, 108, 68, 0 }, // W
  { 0, 36, 36, 24, 24, 36, 36, 0 }, // X
  { 0, 68, 40, 16, 16, 16, 16, 0 }, // Y
  { 0, 60, 4, 8, 16, 32, 60, 0 } // Z
};

// Cisla 0-9
uint8_t CHARS_NUMBER[][8] = {
  { 0, 24, 36, 52, 44, 36, 24, 0 }, // 0
  { 0, 8, 24, 40, 8, 8, 8, 0 }, // 1
  { 0, 24, 36, 4, 8, 16, 60, 0 }, // 2
  { 0, 56, 4, 24, 4, 4, 56, 0 }, // 3
  { 0, 8, 24, 40, 124, 8, 8, 0 }, // 4
  { 0, 56, 32, 56, 4, 36, 24, 0 }, // 5
  { 0, 28, 32, 56, 36, 36, 24, 0 }, // 6
  { 0, 60, 4, 8, 8, 16, 16, 0 }, // 7
  { 0, 24, 36, 24, 36, 36, 24, 0 }, // 8
  { 0, 24, 36, 36, 28, 4, 4, 0 } // 9
};

// .
uint8_t CHAR_DOT[8] = { 0, 0, 0, 0, 0, 48, 48, 0 };
// ,
uint8_t CHAR_COMMA[8] = { 0, 0, 0, 0, 0, 0, 32, 32 };
// !
uint8_t CHAR_EXCLAMATION[8] = { 0, 16, 16, 16, 16, 0, 16, 0 };
// ?
uint8_t CHAR_QUESTION[8] = { 0, 56, 4, 24, 16, 0, 16, 0 };
// ;
uint8_t CHAR_SEMICOLON[8] = { 0, 0, 0, 0, 32, 0, 32, 32 };
// +
uint8_t CHAR_PLUS[8] = { 0, 0, 0, 16, 56, 16, 0, 0 };
// -
uint8_t CHAR_MINUS[8] = { 0, 0, 0, 0, 56, 0, 0, 0 };
// *
uint8_t CHAR_MUL[8] = { 0, 0, 0, 40, 16, 40, 0, 0 };
// /
uint8_t CHAR_DIV[8] = { 0, 4, 8, 8, 16, 16, 32, 0 };
// =
uint8_t CHAR_EQUAL[8] = { 0, 0, 0, 56, 0, 56, 0, 0 };

#define NUMBER_OF_STICKMAN 6 
uint8_t SCR_STICKMAN[][8] = {
  {
    0b00010000, 
    0b00101000, 
    0b00010000, 
    0b11111110, 
    0b00010000, 
    0b00010000, 
    0b00101000, 
    0b00101000
  },
  {
    0b00010000, 
    0b10101010, 
    0b01010100, 
    0b00111000, 
    0b00010000, 
    0b00010000, 
    0b00101000, 
    0b00101000
  },
  {
    0b00010000, 
    0b00101000, 
    0b00010000, 
    0b11111110, 
    0b00010000, 
    0b00010000, 
    0b00101000, 
    0b00101000
  },
  {
    0b00010000, 
    0b00101000, 
    0b00010000, 
    0b00111000, 
    0b01010100, 
    0b10010010, 
    0b00101000, 
    0b00101000
  },
  {
    0b00010000, 
    0b00101000, 
    0b00010000, 
    0b00111000, 
    0b00111000, 
    0b00111000, 
    0b01101100, 
    0b00101000
  },
  {
    0b00010000, 
    0b00101000, 
    0b00010000, 
    0b00111000, 
    0b01010100, 
    0b10010010, 
    0b00101000, 
    0b00101000
  }
};

#define NUMBER_OF_DIAGONAL_LIGHT 30
// Diagonalni rozsirovani svetel a nasledny ubytek
uint8_t SCR_DIAGONAL_LIGHT[NUMBER_OF_DIAGONAL_LIGHT][8] = {
  { 0, 0, 0, 0, 0, 0, 0, 0 },
  { 128, 0, 0, 0, 0, 0, 0, 0 },
  { 192, 128, 0, 0, 0, 0, 0, 0 },
  { 224, 192, 128, 0, 0, 0, 0, 0 },
  { 240, 224, 192, 128, 0, 0, 0, 0 },
  { 248, 240, 224, 192, 128, 0, 0, 0 },
  { 252, 248, 240, 224, 192, 128, 0, 0 },
  { 254, 252, 248, 240, 224, 192, 128, 0 },
  { 255, 254, 252, 248, 240, 224, 192, 128 },

  { 255, 255, 254, 252, 248, 240, 224, 192 },
  { 255, 255, 255, 254, 252, 248, 240, 224 },
  { 255, 255, 255, 255, 254, 252, 248, 240 },
  { 255, 255, 255, 255, 255, 254, 252, 248 },
  { 255, 255, 255, 255, 255, 255, 254, 252 },
  { 255, 255, 255, 255, 255, 255, 255, 254 },
  { 255, 255, 255, 255, 255, 255, 255, 255 },

  { 127, 255, 255, 255, 255, 255, 255, 255 },
  { 63, 127, 255, 255, 255, 255, 255, 255 },
  { 31, 63, 127, 255, 255, 255, 255, 255 },
  { 15, 31, 63, 127, 255, 255, 255, 255 },
  { 7, 15, 31, 63, 127, 255, 255, 255 },
  { 3, 7, 15, 31, 63, 127, 255, 255 },

  { 1, 3, 7, 15, 31, 63, 127, 255 },
  { 0, 1, 3, 7, 15, 31, 63, 127 },
  { 0, 0, 1, 3, 7, 15, 31, 63 },
  { 0, 0, 0, 1, 3, 7, 15, 31 },
  { 0, 0, 0, 0, 1, 3, 7, 15 },
  { 0, 0, 0, 0, 0, 1, 3, 7 },
  { 0, 0, 0, 0, 0, 0, 1, 3 },
  { 0, 0, 0, 0, 0, 0, 0, 1 }
};

#define NUMBER_OF_DIAGONAL_LIGHT_LINE 23
// Diagonalni svetelny pruh
uint8_t SCR_DIAGONAL_LIGHT_LINE[NUMBER_OF_DIAGONAL_LIGHT_LINE][8] = {
  { 0, 0, 0, 0, 0, 0, 0, 0 },
  { 128, 0, 0, 0, 0, 0, 0, 0 },
  { 192, 128, 0, 0, 0, 0, 0, 0 },
  { 224, 192, 128, 0, 0, 0, 0, 0 },
  { 240, 224, 192, 128, 0, 0, 0, 0 },
  { 248, 240, 224, 192, 128, 0, 0, 0 },
  { 252, 248, 240, 224, 192, 128, 0, 0 },
  { 254, 252, 248, 240, 224, 192, 128, 0 },
  { 255, 254, 252, 248, 240, 224, 192, 128 },

  { 127, 255, 254, 252, 248, 240, 224, 192 },
  { 63, 127, 255, 254, 252, 248, 240, 224 },
  { 31, 63, 127, 255, 254, 252, 248, 240 },
  { 15, 31, 63, 127, 255, 254, 252, 248 },
  { 7, 15, 31, 63, 127, 255, 254, 252 },
  { 3, 7, 15, 31, 63, 127, 255, 254 },

  { 1, 3, 7, 15, 31, 63, 127, 255 },
  { 0, 1, 3, 7, 15, 31, 63, 127 },
  { 0, 0, 1, 3, 7, 15, 31, 63 },
  { 0, 0, 0, 1, 3, 7, 15, 31 },
  { 0, 0, 0, 0, 1, 3, 7, 15 },
  { 0, 0, 0, 0, 0, 1, 3, 7 },
  { 0, 0, 0, 0, 0, 0, 1, 3 },
  { 0, 0, 0, 0, 0, 0, 0, 1 }
};

#define NUMBER_OF_GROW_RECT_FILL 8
// Zvetsujici se obdelnik a postupne mizici
uint8_t SCR_GROW_RECT_FILL[NUMBER_OF_GROW_RECT_FILL][8] = {
  { 0, 0, 0, 0, 0, 0, 0, 0 },
  { 0, 0, 0, 24, 24, 0, 0, 0 },
  { 0, 0, 60, 60, 60, 60, 0, 0 },
  { 0, 126, 126, 126, 126, 126, 126, 0 },
  { 255, 255, 255, 255, 255, 255, 255, 255 },
  { 255, 255, 255, 231, 231, 255, 255, 255 },
  { 255, 255, 195, 195, 195, 195, 255, 255 },
  { 255, 129, 129, 129, 129, 129, 129, 255 }
};

#define NUMBER_OF_GROW_RECT 5
// Zvetsujici se obdelnik a postupne mizici
uint8_t SCR_GROW_RECT[NUMBER_OF_GROW_RECT][8] = {
  { 0, 0, 0, 0, 0, 0, 0, 0 },
  { 0, 0, 0, 24, 24, 0, 0, 0 },
  { 0, 0, 60, 36, 36, 60, 0, 0 },
  { 0, 126, 66, 66, 66, 66, 126, 0 },
  { 255, 129, 129, 129, 129, 129, 129, 255 }
};

#define NUMBER_OF_FILLING 65
// Zvetsujici se obdelnik a postupne mizici
uint8_t SCR_FILLING[NUMBER_OF_FILLING][8] = {
  { 0, 0, 0, 0, 0, 0, 0, 0 },
  { 128, 0, 0, 0, 0, 0, 0, 0 },
  { 192, 0, 0, 0, 0, 0, 0, 0 },
  { 224, 0, 0, 0, 0, 0, 0, 0 },
  { 240, 0, 0, 0, 0, 0, 0, 0 },
  { 248, 0, 0, 0, 0, 0, 0, 0 },
  { 252, 0, 0, 0, 0, 0, 0, 0 },
  { 254, 0, 0, 0, 0, 0, 0, 0 },
  { 255, 0, 0, 0, 0, 0, 0, 0 },

  { 255, 128, 0, 0, 0, 0, 0, 0 },
  { 255, 192, 0, 0, 0, 0, 0, 0 },
  { 255, 224, 0, 0, 0, 0, 0, 0 },
  { 255, 240, 0, 0, 0, 0, 0, 0 },
  { 255, 248, 0, 0, 0, 0, 0, 0 },
  { 255, 252, 0, 0, 0, 0, 0, 0 },
  { 255, 254, 0, 0, 0, 0, 0, 0 },
  { 255, 255, 0, 0, 0, 0, 0, 0 },

  { 255, 255, 128, 0, 0, 0, 0, 0 },
  { 255, 255, 192, 0, 0, 0, 0, 0 },
  { 255, 255, 224, 0, 0, 0, 0, 0 },
  { 255, 255, 240, 0, 0, 0, 0, 0 },
  { 255, 255, 248, 0, 0, 0, 0, 0 },
  { 255, 255, 252, 0, 0, 0, 0, 0 },
  { 255, 255, 254, 0, 0, 0, 0, 0 },
  { 255, 255, 255, 0, 0, 0, 0, 0 },

  { 255, 255, 255, 128, 0, 0, 0, 0 },
  { 255, 255, 255, 192, 0, 0, 0, 0 },
  { 255, 255, 255, 224, 0, 0, 0, 0 },
  { 255, 255, 255, 240, 0, 0, 0, 0 },
  { 255, 255, 255, 248, 0, 0, 0, 0 },
  { 255, 255, 255, 252, 0, 0, 0, 0 },
  { 255, 255, 255, 254, 0, 0, 0, 0 },
  { 255, 255, 255, 255, 0, 0, 0, 0 },

  { 255, 255, 255, 255, 128, 0, 0, 0 },
  { 255, 255, 255, 255, 192, 0, 0, 0 },
  { 255, 255, 255, 255, 224, 0, 0, 0 },
  { 255, 255, 255, 255, 240, 0, 0, 0 },
  { 255, 255, 255, 255, 248, 0, 0, 0 },
  { 255, 255, 255, 255, 252, 0, 0, 0 },
  { 255, 255, 255, 255, 254, 0, 0, 0 },
  { 255, 255, 255, 255, 255, 0, 0, 0 },

  { 255, 255, 255, 255, 255, 128, 0, 0 },
  { 255, 255, 255, 255, 255, 192, 0, 0 },
  { 255, 255, 255, 255, 255, 224, 0, 0 },
  { 255, 255, 255, 255, 255, 240, 0, 0 },
  { 255, 255, 255, 255, 255, 248, 0, 0 },
  { 255, 255, 255, 255, 255, 252, 0, 0 },
  { 255, 255, 255, 255, 255, 254, 0, 0 },
  { 255, 255, 255, 255, 255, 255, 0, 0 },

  { 255, 255, 255, 255, 255, 255, 128, 0 },
  { 255, 255, 255, 255, 255, 255, 192, 0 },
  { 255, 255, 255, 255, 255, 255, 224, 0 },
  { 255, 255, 255, 255, 255, 255, 240, 0 },
  { 255, 255, 255, 255, 255, 255, 248, 0 },
  { 255, 255, 255, 255, 255, 255, 252, 0 },
  { 255, 255, 255, 255, 255, 255, 254, 0 },
  { 255, 255, 255, 255, 255, 255, 255, 0 },

  { 255, 255, 255, 255, 255, 255, 255, 128 },
  { 255, 255, 255, 255, 255, 255, 255, 192 },
  { 255, 255, 255, 255, 255, 255, 255, 224 },
  { 255, 255, 255, 255, 255, 255, 255, 240 },
  { 255, 255, 255, 255, 255, 255, 255, 248 },
  { 255, 255, 255, 255, 255, 255, 255, 252 },
  { 255, 255, 255, 255, 255, 255, 255, 254 },
  { 255, 255, 255, 255, 255, 255, 255, 255 }
};

// ===================

#define NUMBER_OF_MOVE_RECT 24
// Pohybujici se obdelnicek
uint8_t SCR_MOVE_RECT[NUMBER_OF_MOVE_RECT][8] = {
  { 192, 192, 0, 0, 0, 0, 0, 0 },
  { 96, 96, 0, 0, 0, 0, 0, 0 },
  { 48, 48, 0, 0, 0, 0, 0, 0 },
  { 24, 24, 0, 0, 0, 0, 0, 0 },
  { 12, 12, 0, 0, 0, 0, 0, 0 },
  { 6, 6, 0, 0, 0, 0, 0, 0 },
  { 3, 3, 0, 0, 0, 0, 0, 0 },
  { 0, 3, 3, 0, 0, 0, 0, 0 },
  { 0, 0, 3, 3, 0, 0, 0, 0 },
  { 0, 0, 0, 3, 3, 0, 0, 0 },
  { 0, 0, 0, 0, 3, 3, 0, 0 },
  { 0, 0, 0, 0, 0, 3, 3, 0 },
  { 0, 0, 0, 0, 0, 0, 3, 3 },
  { 0, 0, 0, 0, 0, 0, 6, 6 },
  { 0, 0, 0, 0, 0, 0, 12, 12 },
  { 0, 0, 0, 0, 0, 0, 24, 24 },
  { 0, 0, 0, 0, 0, 0, 48, 48 },
  { 0, 0, 0, 0, 0, 0, 96, 96 },
  { 0, 0, 0, 0, 0, 0, 192, 192 },
  { 0, 0, 0, 0, 0, 192, 192, 0 },
  { 0, 0, 0, 0, 192, 192, 0, 0 },
  { 0, 0, 0, 192, 192, 0, 0, 0 },
  { 0, 0, 192, 192, 0, 0, 0, 0 },
  { 0, 192, 192, 0, 0, 0, 0, 0 }
};


#define NUMBER_OF_ROTATE_LINE 12
// Tocici se carka
uint8_t SCR_ROTATE_LINE[NUMBER_OF_ROTATE_LINE][8] = {
  { 0, 16, 16, 16, 16, 16, 16, 16 },
  { 0, 8, 8, 16, 16, 16, 32, 32 },
  { 0, 4, 8, 8, 16, 32, 32, 64 },
  { 0, 2, 4, 8, 16, 32, 64, 128 },
  { 0, 0, 2, 12, 16, 96, 128, 0 },
  { 0, 0, 0, 6, 56, 192, 0, 0 },
  { 0, 0, 0, 0, 254, 0, 0, 0 },
  { 0, 0, 0, 192, 56, 6, 0, 0 },
  { 0, 0, 128, 96, 16, 12, 2, 0 },
  { 0, 128, 64, 32, 16, 8, 4, 2 },
  { 0, 64, 32, 32, 16, 8, 8, 4 },
  { 0, 32, 32, 16, 16, 16, 8, 8 }
};

#define NUMBER_OF_ROT_FILL 38
// Vyplneni rotovanim
uint8_t SCR_ROT_FILL[NUMBER_OF_ROT_FILL][8] = {
  { 0, 0, 0, 0, 0, 0, 0, 0 },
  { 0, 0, 0, 0, 0, 0, 0, 0 },
  { 0, 0, 0, 0, 0, 0, 0, 0 },
  { 129, 0, 0, 0, 0, 0, 0, 129 },
  { 193, 1, 0, 0, 0, 0, 128, 131 },
  { 225, 1, 1, 0, 0, 128, 128, 135 },
  { 241, 1, 1, 1, 128, 128, 128, 143 },
  { 249, 1, 1, 129, 129, 128, 128, 159 },
  { 253, 1, 129, 129, 129, 128, 129, 191 },
  { 255, 129, 129, 129, 129, 129, 129, 255 },
  { 255, 195, 129, 129, 129, 129, 195, 255 },
  { 255, 227, 131, 129, 129, 193, 199, 255 },
  { 255, 243, 131, 131, 193, 193, 207, 255 },
  { 255, 251, 131, 195, 195, 193, 223, 255 },
  { 255, 255, 195, 195, 195, 195, 255, 255 },
  { 255, 255, 231, 195, 195, 231, 255, 255 },
  { 255, 255, 247, 199, 227, 239, 255, 255 },
  { 255, 255, 255, 231, 231, 255, 255, 255 },
  { 255, 255, 255, 239, 247, 255, 255, 255 },
  { 255, 255, 255, 255, 255, 255, 255, 255 },
  { 255, 255, 255, 255, 255, 255, 255, 255 },
  { 255, 255, 255, 255, 255, 255, 255, 255 },
  { 255, 255, 255, 247, 239, 255, 255, 255 },
  { 255, 255, 255, 231, 231, 255, 255, 255 },
  { 255, 255, 247, 199, 227, 239, 255, 255 },
  { 255, 255, 231, 195, 195, 231, 255, 255 },
  { 255, 255, 195, 195, 195, 195, 255, 255 },
  { 255, 251, 131, 195, 195, 193, 223, 255 },
  { 255, 243, 131, 131, 193, 193, 207, 255 },
  { 255, 227, 131, 129, 129, 193, 199, 255 },
  { 255, 195, 129, 129, 129, 129, 195, 255 },
  { 255, 129, 129, 129, 129, 129, 129, 255 },
  { 253, 1, 129, 129, 129, 129, 128, 191 },
  { 249, 1, 1, 129, 129, 128, 128, 159 },
  { 241, 1, 1, 1, 128, 128, 128, 143 },
  { 225, 1, 1, 0, 0, 128, 128, 135 },
  { 193, 1, 0, 0, 0, 0, 128, 131 },
  { 129, 0, 0, 0, 0, 0, 0, 129 }
};

#define NUMBER_OF_LINE_PULS 20
// Cara s pulzem
uint8_t SCR_LINE_PULS[NUMBER_OF_LINE_PULS][8] = {
  { 0, 0, 0, 0, 255, 0, 0, 0 },
  { 0, 1, 1, 1, 255, 0, 0, 0 },
  { 0, 2, 3, 2, 254, 0, 0, 0 },
  { 0, 4, 6, 5, 252, 0, 0, 0 },
  { 0, 8, 12, 10, 249, 0, 0, 0 },
  { 0, 16, 24, 20, 242, 1, 0, 0 },
  { 0, 32, 48, 40, 228, 2, 1, 0 },
  { 0, 64, 96, 80, 200, 5, 2, 0 },
  { 0, 128, 192, 160, 145, 10, 4, 0 },
  { 0, 0, 128, 64, 35, 20, 8, 0 },
  { 0, 0, 0, 128, 71, 40, 16, 0 },
  { 0, 0, 0, 0, 143, 80, 32, 0 },
  { 0, 0, 0, 0, 31, 160, 64, 0 },
  { 0, 0, 0, 0, 63, 64, 128, 0 },
  { 0, 0, 0, 0, 127, 128, 0, 0 },
  { 0, 0, 0, 0, 255, 0, 0, 0 },
  { 0, 0, 0, 0, 255, 0, 0, 0 },
  { 0, 0, 0, 0, 255, 0, 0, 0 },
  { 0, 0, 0, 0, 255, 0, 0, 0 },
  { 0, 0, 0, 0, 255, 0, 0, 0 }
};
